/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-18 09:06:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import com.criminal_record_management.helper.ConnectionProvider;
import com.criminal_record_management.entities.Message;

public final class crimes_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("com.criminal_record_management.helper.ConnectionProvider");
    _jspx_imports_classes.add("com.criminal_record_management.entities.Message");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Crime Records Management System</title>\r\n");
      out.write("    <!-- Add the link to crimes.css here -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/crimes.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Your CSS styles here */\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #crimes-section {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h2 {\r\n");
      out.write("            font-family: \"Arial Black\", sans-serif;\r\n");
      out.write("            color: #007bff;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .table-container {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn {\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .add-btn {\r\n");
      out.write("            background-color: #28a745;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .add-btn:hover {\r\n");
      out.write("            background-color: #218838;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .edit-btn {\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .edit-btn:hover {\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .delete-btn {\r\n");
      out.write("            background-color: #dc3545;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .delete-btn:hover {\r\n");
      out.write("            background-color: #c82333;\r\n");
      out.write("        }   \r\n");
      out.write("\r\n");
      out.write("        .alert {\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            border: 1px solid transparent;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .alert-success {\r\n");
      out.write("            color: #155724;\r\n");
      out.write("            background-color: #d4edda;\r\n");
      out.write("            border-color: #c3e6cb;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
 Message m1 = (Message) session.getAttribute("msg");
       if(m1 != null) { 
      out.write("\r\n");
      out.write("           <div class=\"alert alert-success\" role=\"alert\">\r\n");
      out.write("               ");
      out.print( m1.getContent() );
      out.write("\r\n");
      out.write("           </div>\r\n");
      out.write("           ");
 session.removeAttribute("msg"); 
      out.write("\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <section id=\"crimes-section\">\r\n");
      out.write("        <h2>Manage Crimes</h2>\r\n");
      out.write("        <div class=\"table-container\">\r\n");
      out.write("            <table class=\"crime-table\">\r\n");
      out.write("                <thead>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>S.No</th>\r\n");
      out.write("                        <th>Date of Crime</th>\r\n");
      out.write("                        <th>Location</th>\r\n");
      out.write("                        <th>Type of Crime</th>\r\n");
      out.write("                        <th>Description</th>\r\n");
      out.write("                        <th>People Involved</th>\r\n");
      out.write("                        <th>Status</th>\r\n");
      out.write("                        <th>Actions</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody>\r\n");
      out.write("                    ");
 
                        Connection con = null;
                        Statement stmt = null;
                        ResultSet rs = null;
                        try {
                            con = ConnectionProvider.getConnection();
                            stmt = con.createStatement();
                            String query = "SELECT * FROM crimes";
                            rs = stmt.executeQuery(query);
                            int count =1;
                            while (rs.next()) {
                    
      out.write("\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td>");
      out.print( count++ );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( rs.getString("date_of_crime") );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( rs.getString("location") );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( rs.getString("crime_type") );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( rs.getString("description") );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( rs.getString("people_involved") );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( rs.getString("status") );
      out.write("</td>\r\n");
      out.write("                                    <td>\r\n");
      out.write("                                        <button class=\"btn edit-btn\"><a href=\"edit_crimes.jsp?crimeid=");
      out.print( rs.getInt("crimeId") );
      out.write("\">Edit</a></button>\r\n");
      out.write("                                        <button class=\"btn delete-btn\"><a href=\"delete?crimeid=");
      out.print( rs.getString("crimeId") );
      out.write("\">Delete</a></button>\r\n");
      out.write("                                    </td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                    ");
 
                            }
                        } catch (SQLException e) {
                            e.printStackTrace();
                        } finally {
                            // Close resources in finally block
                            try {
                                if (rs != null) rs.close();
                                if (stmt != null) stmt.close();
                                if (con != null) con.close();
                            } catch (SQLException e) {
                                e.printStackTrace();
                            }
                        }
                    
      out.write("\r\n");
      out.write("                </tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("        <button class=\"btn add-btn\" onclick=\"redirectToEdit('add')\">Add Crime</button>\r\n");
      out.write("    </section>\r\n");
      out.write("    <script>\r\n");
      out.write("        // Function to redirect to edit_crimes.html or add_crimes.html based on action\r\n");
      out.write("        function redirectToEdit(action) {\r\n");
      out.write("            if (action === 'edit') {\r\n");
      out.write("                window.location.href = \"edit_crimes.jsp\";\r\n");
      out.write("            } else if (action === 'add') {\r\n");
      out.write("                window.location.href = \"add_crime.jsp\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
